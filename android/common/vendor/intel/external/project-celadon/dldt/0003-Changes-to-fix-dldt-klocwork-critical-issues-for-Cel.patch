From e7559fe56e2e37d9493ad34afc7e9896195d4f0b Mon Sep 17 00:00:00 2001
From: "lakshmishree.c@intel.com" <lakshmishree.c@intel.com>
Date: Wed, 18 Mar 2020 16:07:06 +0530
Subject: [PATCH] Changes to fix dldt klocwork critical issues for Celadon P

Change-Id: Iac89ed96cc33d864b25c6d5fa08f131e7de6e293
Tracked-On: OAM-90424
Signed-off-by: Lakshmishree C <Lakshmishree C lakshmishree.c@intel.com>
---
 .../mkl-dnn/src/cpu/gemm/f32/jit_avx512_common_gemm_f32.cpp   | 4 +++-
 .../thirdparty/mkl-dnn/src/cpu/gemm/f32/jit_avx_gemm_f32.cpp  | 4 +++-
 inference-engine/thirdparty/mkl-dnn/src/cpu/ref_lrn.cpp       | 3 +++
 3 files changed, 9 insertions(+), 2 deletions(-)

diff --git a/inference-engine/thirdparty/mkl-dnn/src/cpu/gemm/f32/jit_avx512_common_gemm_f32.cpp b/inference-engine/thirdparty/mkl-dnn/src/cpu/gemm/f32/jit_avx512_common_gemm_f32.cpp
index d7be43e3..e93999e2 100644
--- a/inference-engine/thirdparty/mkl-dnn/src/cpu/gemm/f32/jit_avx512_common_gemm_f32.cpp
+++ b/inference-engine/thirdparty/mkl-dnn/src/cpu/gemm/f32/jit_avx512_common_gemm_f32.cpp
@@ -1914,6 +1914,8 @@ mkldnn_status_t jit_avx512_common_gemm_f32(
         ompstatus_ = (unsigned char *) malloc(
                 nthr * CACHE_LINE_SIZE,
                 CACHE_LINE_SIZE);
+        if (ompstatus_ == nullptr)
+            return mkldnn_out_of_memory;
         ompstatus = (unsigned char volatile *) ompstatus_;
         assert(ompstatus);
 
@@ -2050,7 +2052,7 @@ mkldnn_status_t jit_avx512_common_gemm_f32(
 
 
     // handle C summation later
-    if (nthr_k > 1 && ompstatus[0] == 0) {
+    if (nthr_k > 1 && ompstatus != nullptr && ompstatus[0] == 0) {
 
         parallel_nd(nthr, [&](const int ithr) {
             int ithr_m, ithr_n, ithr_k, ithr_mn;
diff --git a/inference-engine/thirdparty/mkl-dnn/src/cpu/gemm/f32/jit_avx_gemm_f32.cpp b/inference-engine/thirdparty/mkl-dnn/src/cpu/gemm/f32/jit_avx_gemm_f32.cpp
index 60d42208..da980013 100644
--- a/inference-engine/thirdparty/mkl-dnn/src/cpu/gemm/f32/jit_avx_gemm_f32.cpp
+++ b/inference-engine/thirdparty/mkl-dnn/src/cpu/gemm/f32/jit_avx_gemm_f32.cpp
@@ -2488,6 +2488,8 @@ mkldnn_status_t jit_avx_gemm_f32(
         ompstatus_ = (unsigned char *) malloc(
                 nthr * CACHE_LINE_SIZE,
                 CACHE_LINE_SIZE);
+        if (ompstatus_ == nullptr)
+            return mkldnn_out_of_memory;
         ompstatus = (unsigned char volatile *) ompstatus_;
         assert(ompstatus);
 
@@ -2623,7 +2625,7 @@ mkldnn_status_t jit_avx_gemm_f32(
     });
 
     // handle C summation later
-    if (nthr_k > 1 && ompstatus[0] == 0) {
+    if (nthr_k > 1 && ompstatus != nullptr && ompstatus[0] == 0) {
 
         parallel_nd(nthr, [&](const int ithr) {
             int ithr_m, ithr_n, ithr_k, ithr_mn;
diff --git a/inference-engine/thirdparty/mkl-dnn/src/cpu/ref_lrn.cpp b/inference-engine/thirdparty/mkl-dnn/src/cpu/ref_lrn.cpp
index de9a1d9f..82a3af1a 100644
--- a/inference-engine/thirdparty/mkl-dnn/src/cpu/ref_lrn.cpp
+++ b/inference-engine/thirdparty/mkl-dnn/src/cpu/ref_lrn.cpp
@@ -200,6 +200,9 @@ void ref_lrn_bwd_t<data_type>::execute_backward() const {
         }
 
         const size_t off = data_off(mb, oc, oh, ow);
+        if (omega_mid == 0) {
+            return;
+        }
         A = fast_negative_powf(omega_mid, beta) * diff_dst[off];
         B *= src[off];
         B *= (2.0f * alpha * beta) / kernel_size;
-- 
2.17.1

